name: Docker Image CI

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  security:
    name: Security scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.13'

      - name: Snyk monitor
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test
    services:
      mariadb:
        image: mariadb:11.5.1-ubi9-rc
        env:
          MYSQL_ROOT_PASSWORD: admin-pw
          MYSQL_DATABASE: tododot
          MYSQL_USER: todo-admin
          MYSQL_PASSWORD: admin-pw
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Run Docker Compose
        run: docker-compose up -d

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todos-backend:latest .

  deliver:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/todos-backend:latest
